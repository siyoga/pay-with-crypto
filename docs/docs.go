// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "BSD-3"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/getForApprove": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get cards for validate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/datastore.Card"
                            }
                        }
                    }
                }
            }
        },
        "/auth/admin_login": {
            "post": {
                "description": "Login to admin account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "Admin data",
                        "name": "admin_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastore.Admin"
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "409": {
                        "description": "Admin already created",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/admin_register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new admin accounts tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "Admin data",
                        "name": "admin_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "first_name": {
                                    "type": "string"
                                },
                                "last_name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastore.Admin"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "409": {
                        "description": "Admin already created",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/createTag": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Login to admin account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "description": "Tag data",
                        "name": "tag_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/datastore.Tag"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login to company account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "Company login data",
                        "name": "login_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.JWTTokenPair"
                        }
                    },
                    "400": {
                        "description": "Invalid company email",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "409": {
                        "description": "Company already created",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create company.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "company_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "linkToCompany": {
                                    "type": "string"
                                },
                                "mail": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/datastore.Company"
                        }
                    },
                    "400": {
                        "description": "Invalid company email",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "409": {
                        "description": "Company already created",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/softDelete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ban company account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "company_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "Company not exist",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/token_update": {
            "post": {
                "description": "Update tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.JWTTokenPair"
                        }
                    },
                    "400": {
                        "description": "Can't update refresh token",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "409": {
                        "description": "Token already created",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/auth/validateCard": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Validate company card as admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "description": "Validate data",
                        "name": "validate_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Card create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "description": "Card data",
                        "name": "card_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "linkToProd": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Card successful created",
                        "schema": {
                            "$ref": "#/definitions/datastore.Card"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "409": {
                        "description": "Already created",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Card delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "description": "Card data",
                        "name": "card_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Card successful deleted"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "403": {
                        "description": "Other owner",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "No card",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/edit": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Card edit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "description": "Card data",
                        "name": "card_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "linkToProd": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card successful edited",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "403": {
                        "description": "Other owner",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "No card",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/getLogo": {
            "get": {
                "description": "Get card logo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card id",
                        "name": "cardId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card logo link",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "No card",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/search": {
            "get": {
                "description": "Search card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Card tags",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/datastore.Card"
                            }
                        }
                    },
                    "404": {
                        "description": "No cards",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/search/id": {
            "get": {
                "description": "Search card by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card id",
                        "name": "cardId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastore.Card"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "403": {
                        "description": "Card owner was banned",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "No card",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/card/uploadLogo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Card logo uploader",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card id",
                        "name": "cardId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Logo image",
                        "name": "cardLogo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Card successful uploaded"
                    },
                    "400": {
                        "description": "Invalid image",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "403": {
                        "description": "Card owner was banned",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "No card",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/company/search/id": {
            "get": {
                "description": "Search company by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "companyId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastore.Company"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "403": {
                        "description": "Card owner was banned",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "404": {
                        "description": "No card",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        },
        "/company/uploadLogo": {
            "post": {
                "security": [
                    {
                        "accessToken": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Company logo uploader",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "Logo image",
                        "name": "companyLogo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Company logo successful uploaded"
                    },
                    "400": {
                        "description": "Invalid request, provide companyLogo",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "datastore.Admin": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "add ` + "`" + `` + "`" + `",
                    "type": "string"
                },
                "created_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/datastore.Tag"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "add ` + "`" + `` + "`" + `",
                    "type": "string"
                }
            }
        },
        "datastore.Card": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "linkToProd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "datastore.Company": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/datastore.Card"
                    }
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "isDel": {
                    "type": "integer"
                },
                "linkToCompany": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "datastore.Tag": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "utility.JWTTokenPair": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "utility.Message": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "accessToken",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "pay-with-crypto.xyz",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "pay-with-crypto API",
	Description:      "Nenavijy swagger",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
